{"version":3,"sources":["components/Search.js","components/Header.js","components/Add.js","components/AnnounsmentItem.js","components/AnnounsmentList.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Search","state","qwery","searchChange","e","target","value","setState","props","onSearch","className","onChange","this","placeholder","Component","Header","Add","title","desc","onChangeTitle","onChangeDesc","onSubmit","preventDefault","AddAnnounc","type","AnnounsmentItem","announcement","onDeleted","onEdit","key","date","toString","description","onClick","AnnounsmentList","announcements","map","id","Edit","data","onChangeDate","setEdited","App","tempEditing","delItem","filter","a","addItem","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","newAnnounsment","now","console","log","search","length","indexOf","visibleA","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0bf48cda.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nexport class Search extends Component {\r\n    state ={\r\nqwery: '',\r\n    }\r\n    searchChange = (e) => {\r\n        const qwery = e.target.value;\r\n        this.setState({qwery});\r\n        this.props.onSearch(qwery);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Search\">\r\n\r\n               <input onChange={this.searchChange}\r\n                      placeholder='search'\r\n                      className='search'\r\n                      value={this.state.qwery}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n\r\n        return (\r\n            <h1>Announcements</h1>\r\n        );\r\n\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\n\r\nexport class Add extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        desc: ''\r\n    }\r\n\r\nonChangeTitle = (e) => {\r\n        this.setState(\r\n            {\r\n                title: e.target.value,\r\n            }\r\n        )\r\n}\r\n\r\nonChangeDesc = (e) => {\r\n        this.setState(\r\n            {\r\n                desc: e.target.value,\r\n            }\r\n        )\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.AddAnnounc(this.state.title, this.state.desc);\r\n        this.setState( {\r\n            title: '',\r\n            desc: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Add\">\r\n                <h2>Add announcement</h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <label>Title</label><input type='text' onChange={this.onChangeTitle} value={this.state.title}/><br/>\r\n                    <label>Description</label><textarea  onChange={this.onChangeDesc} value={this.state.desc}/><br/>\r\n\r\n                    <button type='submit'>Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport default class AnnounsmentItem extends Component {\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const {announcement, onDeleted, onEdit} = this.props;\r\n        return (\r\n\r\n\r\n            <li key={announcement.date.toString()}>\r\n                <h4>{announcement.title}</h4>\r\n                <p>{announcement.description}</p>\r\n                <span>{announcement.date}</span> <br/>\r\n                <button className='edit'\r\n                        onClick = {onEdit}\r\n                >Edit</button>\r\n                <button\r\n                    className='del'\r\n                    onClick = {onDeleted}>\r\n                    Delete\r\n                </button>\r\n\r\n            </li>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AnnounsmentItem from './AnnounsmentItem';\r\n\r\n\r\nexport const AnnounsmentList = ({announcements, onDeleted, onEdit}) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ul>\r\n                {announcements.map(announcement =>\r\n                    (<AnnounsmentItem\r\n                        announcement={announcement}\r\n                    onDeleted={() => onDeleted(announcement.id)}\r\n                        onEdit={() => onEdit(announcement.id,announcement.title,announcement.description,announcement.date)}/>))}\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport class Edit extends Component {\r\n\r\nstate = {\r\n    id: this.props.data.id,\r\n    title: this.props.data.title,\r\n    desc: this.props.data.description,\r\n    date: this.props.data.date,\r\n}\r\n\r\nonChangeTitle = (e) => {\r\n    this.setState(\r\n        {\r\n            title: e.target.value,\r\n        }\r\n    )\r\n}\r\n\r\nonChangeDesc = (e) => {\r\n    this.setState(\r\n        {\r\n            desc: e.target.value,\r\n        }\r\n    )\r\n}\r\n    onChangeDate = (e) => {\r\n        this.setState(\r\n            {\r\n                date: e.target.value,\r\n            }\r\n        )\r\n    }\r\n\r\nonSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.setEdited(this.state.id, this.state.title, this.state.desc, this.state.date);\r\n    this.setState( {\r\n        id: '',\r\n        title: '',\r\n        desc: '',\r\n        date: ''\r\n    });\r\n}\r\n\r\nrender() {\r\n\r\n    return (\r\n        <div className=\"Add\">\r\n            <h2>Add announcement</h2>\r\n            <form onSubmit={this.onSubmit}>\r\n                <label>Title</label><input type='text' onChange={this.onChangeTitle} value={this.state.title}/><br/>\r\n                <label>Description</label><textarea  onChange={this.onChangeDesc} value={this.state.title}/><br/>\r\n                <label>Date</label><input type='date' onChange={this.onChangeDate} value={this.state.date}/><br/>\r\n                <button type='submit'>Edit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Search} from './components/Search';\nimport Header from './components/Header';\nimport {Add} from './components/Add';\nimport {AnnounsmentList} from './components/AnnounsmentList';\nimport {Edit} from './components/Edit';\n\nexport default class App extends Component {\n tempEditing = {\n        id: '1',\n        title: '11',\n        description: '11',\n        date: '2011-11-11'\n    }\n    state = {\n        announcements: [{\n            id: '0000',\n            title: '1',\n            description: 'lorem10',\n            date: '22.10.1985'\n        },\n            {\n                id: '0001',\n                title: '11',\n                description: 'lorem101111',\n                date: '22.09.1985'\n            }],\n\n        qwery: '11',\n    }\n    delItem = (id) => {\n        this.setState(\n            ({announcements}) => {\n\n                return {\n                    announcements: announcements.filter(a => a.id !== id),\n                };\n\n            }\n        );\n    }\n    addItem = (title, description) => {\n        let date = new Date();\n        let data = date.getDate() + '.0' +\n            date.getMonth() + '.' + date.getFullYear() + '  ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n        const newAnnounsment = {\n            id: Date.now(),\n            title: title,\n            description: description,\n            date: data\n        }\n        this.setState(\n            ({announcements}) => {\n\n                return {\n                    announcements: [...announcements, newAnnounsment],\n                };\n\n            }\n        );\n    }\n\n    onEdit = (id, title, description, date) => {\n\n        this.setState(\n            ({tempEditing}) => {\n                return {\n                    tempEditing: {id: id, title: title, description: description, date: date}\n\n\n                };\n            });\n        console.log(this.state.tempEditing);\n    }\n    setEdited = (id, title, description, date) => {\n        this.setState(\n            ({announcements}) => {\n\n                return {\n                    announcements: announcements.filter(a => a.id !== id),\n                };\n\n            }\n        );\n    }\n\n    search = (announcements, qwery) => {\n        if (qwery.length === 0) {\n            return announcements;\n        }\n        return announcements.filter(a => {\n                return a.title.indexOf(qwery) > -1\n            }\n        );\n    }\n    onSearch = (qwery) => {\n        this.setState({qwery: qwery});\n    }\n\n    render() {\n        const visibleA = this.search(this.state.announcements, this.state.qwery)\n        return (\n            <>\n                <div className=\"Header\">\n                    <Header/>\n                </div>\n                <div className=\"Search\">\n                    <Search onSearch={this.onSearch}/>\n                </div>\n                <div className=\"App\">\n                    <Add AddAnnounc={this.addItem}/>\n                    <AnnounsmentList\n                        announcements={visibleA}\n                        onDeleted={this.delItem}\n                        onEdit={this.onEdit}/>\n                    <Edit tempEditing={this.tempEditing} setEdited={this.setEdited}/>\n\n                </div>\n            </>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}